/*
 *  PRG2201 Object-Oriented Programming JAN 2021
 *  Project - Inventory Management System
 *  Name: Kathryn Lim i21020061 INTI International University Nilai
 * 
 *  [file description]
 */
package inventorymanagementver1;


import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class adminHomepage extends javax.swing.JFrame {

    /**
     * Creates new form adminHomepage
     */
    public adminHomepage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        updateStocksButton = new javax.swing.JButton();
        registerStocksButton = new javax.swing.JButton();
        displayStocksButton = new javax.swing.JButton();
        displayOOSButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        logout = new javax.swing.JLabel();
        stocksListLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        stocksDisplay = new javax.swing.JTable();
        categoryAddButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        testCase = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        salesInterfaceButton = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("INVENTORY MANAGEMENT SYSTEM (Administrator)");

        jLabel2.setText("Choose Your Action: ");

        updateStocksButton.setText("Update Stocks");
        updateStocksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateStocksButtonActionPerformed(evt);
            }
        });

        registerStocksButton.setText("Register New Stock");
        registerStocksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerStocksButtonActionPerformed(evt);
            }
        });

        displayStocksButton.setText("Display Stocks");
        displayStocksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayStocksButtonActionPerformed(evt);
            }
        });

        displayOOSButton.setText("Display Out of Stock Items");
        displayOOSButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayOOSButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        logout.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        logout.setForeground(new java.awt.Color(0, 0, 255));
        logout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logout.setText("Logout");
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });

        stocksListLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        stocksListLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stocksListLabel.setText("STOCKS LIST");

        stocksDisplay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Name", "Description", "Category", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        stocksDisplay.setColumnSelectionAllowed(true);
        stocksDisplay.getTableHeader().setReorderingAllowed(false);
        stocksDisplay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stocksDisplayMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(stocksDisplay);
        stocksDisplay.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (stocksDisplay.getColumnModel().getColumnCount() > 0) {
            stocksDisplay.getColumnModel().getColumn(0).setResizable(false);
            stocksDisplay.getColumnModel().getColumn(1).setResizable(false);
            stocksDisplay.getColumnModel().getColumn(2).setResizable(false);
            stocksDisplay.getColumnModel().getColumn(3).setResizable(false);
            stocksDisplay.getColumnModel().getColumn(4).setResizable(false);
        }

        categoryAddButton.setText("Add Category");
        categoryAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryAddButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete Stock");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        testCase.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        testCase.setForeground(new java.awt.Color(0, 0, 153));
        testCase.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        testCase.setText("Test Case");
        testCase.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        testCase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                testCaseMouseClicked(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(0, 0, 153));

        salesInterfaceButton.setText("Switch To Sales Interface");
        salesInterfaceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salesInterfaceButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(127, 127, 127)
                        .addComponent(testCase, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(displayStocksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(categoryAddButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(registerStocksButton, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                                        .addComponent(updateStocksButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(displayOOSButton, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(stocksListLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(169, 169, 169))
                    .addComponent(exitButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(salesInterfaceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(171, 171, 171)))
                .addGap(80, 80, 80))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(logout)
                            .addComponent(jLabel4)
                            .addComponent(testCase))))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(categoryAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(registerStocksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(updateStocksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addComponent(displayStocksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(stocksListLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(displayOOSButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(salesInterfaceButton)))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed

        DefaultTableModel display = (DefaultTableModel)stocksDisplay.getModel();
        int count;  //store element posn in the product array

        if(stocksDisplay.getSelectionModel().isSelectionEmpty()){
            JOptionPane.showMessageDialog(null, "Please Select a Row!");
        }else{

            int index = stocksDisplay.getSelectedRow(); //gets index of row selected

            //Gets cell values from selected row
            int ID =  Integer.parseInt(display.getValueAt(index,0).toString());

            UserReg.selectedID = ID;

            if(UserReg.productCount != 0){
                count = search(ID);
                //deleting the product from product array
                //create a temp array of size one less than original array
                Product[] temp = new Product[UserReg.products.length - 1];

                //copy all elements into temp array except for the specified element
                for(int p = 0, q = 0; p < UserReg.products.length; p++){
                    if(p == count)  //if element count is reaced, continue without copying
                    continue;
                    //else, copy all other elements
                    temp[q++] = UserReg.products[p];
                }

                //copy temp array to products
                for(int i = 0; i < temp.length ; i++){
                    UserReg.products[i] = temp[i];
                }

                UserReg.productCount--;
                display();
            }
            else
            JOptionPane.showMessageDialog(null, "No products found!");

            System.out.println(index);
        }

    }//GEN-LAST:event_deleteButtonActionPerformed

    private void categoryAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryAddButtonActionPerformed
        UserReg.categoryForm.setLocationRelativeTo(null);
        UserReg.categoryForm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_categoryAddButtonActionPerformed

    private void stocksDisplayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stocksDisplayMouseClicked

    }//GEN-LAST:event_stocksDisplayMouseClicked

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        this.dispose();
        UserReg.loginPage.setLocationRelativeTo(null);
        UserReg.loginPage.setVisible(true);
        UserReg.loginPage.clearFields();
    }//GEN-LAST:event_logoutMouseClicked

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void displayOOSButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayOOSButtonActionPerformed
        clearTable();
      
        DefaultTableModel display = (DefaultTableModel)stocksDisplay.getModel(); 
      
        try{
        if(UserReg.productCount != 0){
            for(int i = 0; i < UserReg.products.length ; i++){
               if(UserReg.products[i].getQty() == 0){
                   display.addRow(UserReg.products[i].getData());
               } 
            }

            if(display.getRowCount() == 0){
                JOptionPane.showMessageDialog(null, "All products are in Stock!");
            }
            
        }
         else
           JOptionPane.showMessageDialog(null, "No products available!");
        
        }catch(Exception e){
           JOptionPane.showMessageDialog(null,"ERROR IN DISPLAY OUT OF STOCK BUTTON: " + e);
        }
            
        
    }//GEN-LAST:event_displayOOSButtonActionPerformed

    private void displayStocksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayStocksButtonActionPerformed
        display();
         DefaultTableModel display = (DefaultTableModel)stocksDisplay.getModel();
        if(display.getRowCount() == 0)
            JOptionPane.showMessageDialog(null, "No products available!");
        
    }//GEN-LAST:event_displayStocksButtonActionPerformed

    private void registerStocksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerStocksButtonActionPerformed
        UserReg.regStock.updateCategory();
        UserReg.regStock.display();
        UserReg.regStock.setLocationRelativeTo(null);
        UserReg.regStock.setVisible(true);
        UserReg.regStock.checkCat();
        this.dispose();
    }//GEN-LAST:event_registerStocksButtonActionPerformed

    private void updateStocksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateStocksButtonActionPerformed

    UserReg.updStock.updateCategory();

    DefaultTableModel display = (DefaultTableModel)stocksDisplay.getModel();

    if(stocksDisplay.getSelectionModel().isSelectionEmpty()){
        JOptionPane.showMessageDialog(null, "Please Select a Row!");
    }else{

        int index = stocksDisplay.getSelectedRow(); //gets index of row selected

        //Gets cell values from selected row
        int ID =  Integer.parseInt(display.getValueAt(index,0).toString());
        String name = display.getValueAt(index,1).toString();
        String desc = display.getValueAt(index,2).toString();
        String category = display.getValueAt(index,3).toString();
        int qty = Integer.parseInt(display.getValueAt(index, 4).toString());

        UserReg.selectedID = ID;

        if(UserReg.productCount != 0){
            UserReg.updStock.setLocationRelativeTo(null);
            UserReg.updStock.setVisible(true);
            UserReg.updStock.setText(ID, name, desc, category, qty);
            this.dispose();
     }
      else
        JOptionPane.showMessageDialog(null, "No products found!");

    System.out.println("selected Row:" + index);

        }
    }//GEN-LAST:event_updateStocksButtonActionPerformed

    /**
     * CREATES A TEST CASE TO CREATE PREDEFINED CATEGORIES AND PRODUCTS FOR TESTING
     * try catch NULL POINTER ERROR.
     * 
     * @param evt 
     */
    private void testCaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_testCaseMouseClicked
      
        try{   
            //creates 3 new categories
            Category category = new Category(0, "Television");             
            CategoryReg.list[0] = category;
            Category category1 = new Category(1, "Computer");             
            CategoryReg.list[1] = category1;
            Category category2 = new Category(2, "Speaker");             
            CategoryReg.list[2] = category2;
            CategoryReg.index = 3;

            //inserts dummy data in products, and fills table up
            Product test0 = new Product(111, "Samsung", "4K Widescreen", "Television", 999);
            Product test1 = new Product(222, "Dell", "RTX 2080", "Computer", 499);
            Product test2 = new Product(331, "LG 8K", "80inch Flatscreen OLED", "Television", 888);
            Product test3 = new Product(453, "Logitech", "Wireless Gaming", "Mouse", 168);
            
            UserReg.products[0] = test0;
            UserReg.products[1] = test1;
            UserReg.products[2] = test2;
            UserReg.products[3] = test3;
            UserReg.productCount = 4;
           
            display();
                
        }catch(Exception e){
          JOptionPane.showMessageDialog(null,"ERROR IN TESTCASE: " + e );
        }
        
    }//GEN-LAST:event_testCaseMouseClicked

    private void salesInterfaceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salesInterfaceButtonActionPerformed
        UserReg.salesHp.setLocationRelativeTo(null);
        UserReg.salesHp.setVisible(true);
        UserReg.salesHp.display();
        this.dispose();
    }//GEN-LAST:event_salesInterfaceButtonActionPerformed

    //method to delete all rows in the table
    private void clearTable(){
        DefaultTableModel display = (DefaultTableModel)stocksDisplay.getModel(); 
        System.out.println(display.getRowCount());
        
        for(int i = display.getRowCount() - 1; i >= 0; i--){
            display.removeRow(i);
        }
    }
    
    public void display(){
        DefaultTableModel display = (DefaultTableModel)stocksDisplay.getModel(); 
        clearTable();
        
        if(UserReg.productCount!=0){          
        clearTable();
        
            for(int i = 0; i < UserReg.productCount; i++){
                display.addRow(UserReg.products[i].getData());
            }
        }
    }
        
    private int search(int ID){       
        for(int j = 0; j < UserReg.productCount; j++){           
            if(UserReg.products[j].getID() == UserReg.selectedID){
                return j;
            }           
        }        
    return 0;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminHomepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminHomepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminHomepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminHomepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminHomepage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton categoryAddButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton displayOOSButton;
    private javax.swing.JButton displayStocksButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel logout;
    private javax.swing.JButton registerStocksButton;
    private javax.swing.JButton salesInterfaceButton;
    private javax.swing.JTable stocksDisplay;
    private javax.swing.JLabel stocksListLabel;
    private javax.swing.JLabel testCase;
    private javax.swing.JButton updateStocksButton;
    // End of variables declaration//GEN-END:variables
}
